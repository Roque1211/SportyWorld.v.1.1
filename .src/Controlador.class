' Gambas class file


'Estado
'Colección con los tipos de ejercicios disponibles
Private TEColeccion As TiposEjercicios

'Fichero con los datos
Private Const FILE_DATOS As String = "tiposejercicios.txt"


'Comportamiento
'Constructor
Public Sub _new()
  
  TEColeccion = New TiposEjercicios
  
  
End


'comportamiento para devolver las KCAL de una determinada actividad
'realizada
Public Function calcularKCal(minutos As Integer, kilos As Float, descrEjer As String) As String
  
  Dim resultado As String
  Dim miEjercicio As Ejercicio
  
  
  'dado los kg, minutos y el ejercicio seleccionado, creamos los objetos necesarios
  miEjercicio = TEColeccion.getEjercicioByDescr(descrEjer)
  
  'y después a esos objetos les pedimos trabajar
  resultado = miEjercicio.calcularKCal(minutos, kilos)
  
  
  'el resultado del trabajo lo ponemos en la pantalla, concretamente en el LBResultado
  Return resultado
End



'Tenemos que inicializar el ComboBox con todos los tipos de ejercicios
'disponibles
Public Sub iniComboBox(CBEjer As ComboBox)

  Dim i As Integer

  Dim miCadena As String
  Dim miEjercicio As Ejercicio
  
  cargarDatos()
  
  For i = 0 To TEColeccion.getSize() - 1
    miEjercicio = TEColeccion.getEjercicioByIndex(i)    
    miCadena = miEjercicio.getDescripcion()  
    CBEjer.Add(miCadena)
  Next 
  
  CBEjer.Index = 0
  
End


'cargar los datos en la coleccion

Private Sub cargarDatos()
    
Dim hFile As File
Dim sLine As String
Dim miEjercicio As Ejercicio    
Dim errores As String
Dim contador As Integer = 1

Dim hayError As Boolean
Dim filError As File
Dim totalError As String

hayError = False
totalError = Now & " \n"

If (Exist(FILE_DATOS)) Then
  ' abro el fichero
  hFile = Open FILE_DATOS For Input
      
  While Not Eof(hFile)
    errores = ""
    
    'leer la siguiente linea
    Line Input #hFile, sLine
    'Comprobar que la linea es correcta
    errores = comprobarErrores(sLine)
    If (errores <> "") Then
      Message.Error(errores & " en la linea " & contador & " del fichero " & FILE_DATOS & ".", "Aceptar")
      hayError = True
      totalError = totalError & errores & " en la linea " & contador & " del fichero " & FILE_DATOS & ".\n"
    Else
      'Añadimos deserializando en el constructor el string obtenido del fichero
      miEjercicio = New Ejercicio(sLine)
      TEColeccion.addEjercicio(miEjercicio)
    Endif
    contador = contador + 1
  Wend
  
  hFile.Close()
Else
    Message.Error("Fichero " & FILE_DATOS & " no encontrado.", "Aceptar")
    hayError = True
    totalError = totalError & "Fichero " & FILE_DATOS & " no encontrado. \n"
Endif  

If hayError Then 
  'escribimos log
  totalError = totalError & "\n ----------------------------------------------------------------- \n \n"
  totalError = totalError & File.Load(User.home & "/Descargas/log.txt")
  File.save(User.home & "/Descargas/log.txt", totalError)

  'salimos
  FMain.Close
Endif  

End

' Comprobador de errores
Private Function comprobarErrores(entrada As String) As String
  Dim resultado As String
  Dim campo2 As String
  Dim primerseparador As Integer
  
  primerseparador = InStr(entrada, ";")
  
  resultado = ""
  'linea vacia
  If (entrada.Len = 0) Then
    resultado = "Línea vacia"
  Else 
    If (primerseparador > 1) Then
      If (InStr(entrada, ";", primerseparador + 1) > 0) Then
          resultado = "Hay más de dos columnas"
      Else
          'voy bien, no tengo cadena vacia ni ; al principio, ni varios ni ningún ;
          campo2 = Right(entrada, Len(entrada) - primerseparador)
          Try CFloat(campo2) 
          If Error Then resultado = "El segundo campo no es de tipo decimal"
      Endif
    Else
      resultado = "Tenemos un ; al principio o tenemos una sola columna"
    Endif
  Endif
  
  'la segunda columna no es un número
  
  Return resultado
End

Private Function compruebaFloat(entrada As String) As String
  
  Dim resultado As Boolean = True
  Dim estadoMaquina As Byte = 4 ' 0 primera parte entera del float, 1 el punto, 2 la parte decimal, 4 sin empezar todavía
  contador As Integer = 0
  primeraLetra As String
  
  restoPorMirar = entrada  
   
  While (contador < Len(entrada) And resultado)
    primeraLetra = Left(restoPorMirar, 1)
    If (Not compruebaLetra(primeraLetra, estadoMaquina)) Then
      resultado = False
    Endif
    restoPorMirar = Right(restoPorMirar, Len(restoPorMirar - 1))
    
    
    contador = contador + 1
  Wend
  Return resultado
End

Private Function compruebaLetra(primeraLetra As Char, estadoMaquina As Byte) As Boolean
  Dim resultado As Boolean = True
  Dim letracodigo As Byte
  
  letracodigo = Asc(primeraLetra, 1)
  
  If (letracodigo) < 48 Or letracodigo > 57) And letracodigo <> 46 Then
    resultado = False
  Else
    Select Case estadoMaquina
      Case 0
        
      Case 1
        
      Case 2
        
      Case 4
        If (letracodigo) <= 48 Or letracodigo >= 57) Then
          estadoMaquina
        Else
          
        Endif
    End Select
    
  Endif
  Return resultado
End

